{
	"$schema": "http://json-schema.org/draft-07/schema#",
	"$id": "https://raw.githubusercontent.com/johnbillion/wp-json-schemas/trunk/schemas/block-type.json",
	"title": "WP_Block_Type",
	"description": "Core class representing a block type.",
	"type": "object",
	"required": [
		"api_version",
		"name",
		"title",
		"category",
		"parent",
		"ancestor",
		"icon",
		"description",
		"keywords",
		"textdomain",
		"styles",
		"supports",
		"example",
		"render_callback",
		"attributes",
		"uses_context",
		"block_hooks",
		"allowed_blocks",
		"variation_callback",
		"view_script_module_ids",
		"view_style_handles",
		"provides_context",
		"editor_script_handles",
		"script_handles",
		"view_script_handles",
		"editor_style_handles",
		"style_handles"
	],
	"properties": {
		"api_version": {
			"description": "Block API version.",
			"type": "integer"
		},
		"name": {
			"description": "Block type key.",
			"type": "string"
		},
		"title": {
			"description": "Human-readable block type label.",
			"type": "string"
		},
		"category": {
			"description": "Block type category classification, used in search interfaces to arrange block types by category.",
			"type": [
				"string",
				"null"
			]
		},
		"parent": {
			"description": "Setting parent lets a block require that it is only available when nested within the specified blocks.",
			"type": [
				"array",
				"null"
			],
			"items": {
				"type": "string"
			}
		},
		"ancestor": {
			"description": "Setting ancestor makes a block available only inside the specified block types at any position of the ancestor's block subtree.",
			"type": [
				"array",
				"null"
			],
			"items": {
				"type": "string"
			}
		},
		"icon": {
			"description": "Block type icon.",
			"type": [
				"string",
				"null"
			]
		},
		"description": {
			"description": "A detailed block type description.",
			"type": "string"
		},
		"keywords": {
			"description": "Additional keywords to produce block type as result in search interfaces.",
			"type": "array",
			"items": {
				"type": "string"
			}
		},
		"textdomain": {
			"description": "The translation textdomain.",
			"type": [
				"string",
				"null"
			]
		},
		"styles": {
			"description": "Alternative block styles.",
			"type": "array"
		},
		"variations": {
			"description": "Block variations.",
			"type": "array"
		},
		"block_hooks": {
			"description": "Block hooks for this block type.",
			"oneOf": [
				{
					"$ref": "../schema.json#/definitions/EmptyArray"
				},
				{
					"type": "object",
					"additionalProperties": {
						"type": "string"
					}
				}
			]
		},
		"allowed_blocks": {
			"description": "Allowed child block types.",
			"type": [
				"array",
				"null"
			],
			"items": {
				"type": "string"
			}
		},
		"variation_callback": {
			"description": "Block variations callback.",
			"anyOf": [
				{
					"$ref": "properties/callable.json"
				},
				{
					"type": "null"
				}
			]
		},
		"view_script_module_ids": {
			"description": "Block type front end only script module IDs.",
			"type": "array",
			"items": {
				"type": "string"
			}
		},
		"view_style_handles": {
			"description": "Block type front end only style handles.",
			"type": "array",
			"items": {
				"type": "string"
			}
		},
		"selectors": {
			"description": "Custom CSS selectors for theme.json style generation.",
			"oneOf": [
				{
					"$ref": "../schema.json#/definitions/EmptyArray"
				},
				{
					"type": "object"
				}
			]
		},
		"supports": {
			"description": "Supported features.",
			"oneOf": [
				{
					"type": "object"
				},
				{
					"type": "null"
				}
			]
		},
		"example": {
			"description": "Structured data for the block preview.",
			"oneOf": [
				{
					"$ref": "../schema.json#/definitions/EmptyArray"
				},
				{
					"type": "object"
				},
				{
					"type": "null"
				}
			]
		},
		"render_callback": {
			"description": "Block type render callback.",
			"anyOf": [
				{
					"$ref": "properties/callable.json"
				},
				{
					"type": "null"
				}
			]
		},
		"attributes": {
			"description": "Block type attributes property schemas.",
			"oneOf": [
				{
					"$ref": "../schema.json#/definitions/EmptyArray"
				},
				{
					"type": "object"
				},
				{
					"type": "null"
				}
			]
		},
		"uses_context": {
			"description": "Context values inherited by blocks of this type.",
			"type": "array",
			"items": {
				"type": "string"
			}
		},
		"provides_context": {
			"description": "Context provided by blocks of this type.",
			"oneOf": [
				{
					"type": "object",
					"additionalProperties": {
						"type": "string"
					}
				},
				{
					"type": "null"
				}
			]
		},
		"editor_script": {
			"description": "Block type editor script handle.",
			"type": [
				"string",
				"null"
			]
		},
		"editor_script_handles": {
			"description": "Block type editor only script handles.",
			"type": "array",
			"items": {
				"type": "string"
			}
		},
		"script": {
			"description": "Block type front end script handle.",
			"type": [
				"string",
				"null"
			]
		},
		"script_handles": {
			"description": "Block type front end and editor script handles.",
			"type": "array",
			"items": {
				"type": "string"
			}
		},
		"view_script": {
			"description": "Public facing script handle.",
			"type": [
				"string",
				"null"
			]
		},
		"view_script_handles": {
			"description": "Block type front end only script handles.",
			"type": "array",
			"items": {
				"type": "string"
			}
		},
		"editor_style": {
			"description": "Block type editor style handle.",
			"oneOf": [
				{
					"type": "string"
				},
				{
					"type": "null"
				},
				{
					"enum": [
						false
					]
				}
			]
		},
		"editor_style_handles": {
			"description": "Block type editor only style handles.",
			"type": "array",
			"items": {
				"type": "string"
			}
		},
		"style": {
			"description": "Block type front end style handle.",
			"oneOf": [
				{
					"type": "string"
				},
				{
					"type": "null"
				},
				{
					"enum": [
						false
					]
				}
			]
		},
		"style_handles": {
			"description": "Block type front end and editor style handles.",
			"type": "array",
			"items": {
				"type": "string"
			}
		},
		"skip_inner_blocks": {
			"type": "boolean"
		}
	},
	"additionalProperties": false
}
